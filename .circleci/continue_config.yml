version: 2.1

orbs:
  maven: circleci/maven@1.2.0

parameters:
  run-build-service-1-job:
    type: boolean
    default: false
  run-build-service-2-job:
    type: boolean
    default: false

#job
jobs:
  Quality-Check:
    docker:
      # node for image
      - image: node:16-alpine3.17
    steps:
      - checkout
      - run:
          name: Code Scan Using Jest
          command: |
            npm install 
            npm run test

  Build-Container-Image:
    parameters:
      SERVICE_TYPE:
        description: name of service
        type: string
        default: front-end
      SERVICE_NAME:
        description: name of service
        type: string
        default: all
    docker:
      - image: public.ecr.aws/kubeopsskills/circleci:1.0.0-docker-gcloud
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Gcloud Authentication
          command: |
            docker login -u jumpboxacademy -p dckr_pat_z9uofZawQQVC2BnXWRss5xjIWDk docker.io
      - run:
          name: Build and Push Docker Image to Container Registry
          command: |
            echo "export COMMIT_ID=$(git log --format="%H" -n 2 | head -n 1)" >> $BASH_ENV
            source $BASH_ENV 
            docker build -t jumpboxacademy/<< parameters.SERVICE_NAME >>:$COMMIT_ID . 
            docker push jumpboxacademy/<< parameters.SERVICE_NAME >>:$COMMIT_ID
            echo "$COMMIT_ID" > source_commit_id
      - persist_to_workspace:
          root: ~/
          paths:
            - project/source_commit_id

workflows:
  service-1:
    when: << pipeline.parameters.run-build-service-1-job >>
    jobs:
      - maven/test:
          name: build-service-1
          command: "
            npm install
            npm run test"
          app_src_directory: "service1"

  # service-2:
  #   when: << pipeline.parameters.run-build-service-2-job >>
  #   jobs:
  #     - maven/test:
  #         name: build-service-2
  #         command: "install -DskipTests"
  #         app_src_directory: "service2"

  # run-integration-tests:
  #   when:
  #     or:
  #       [
  #         << pipeline.parameters.run-build-service-1-job >>,
  #         << pipeline.parameters.run-build-service-2-job >>,
  #       ]
  #   jobs:
  #     - maven/test:
  #         name: run-integration-tests
  #         command: "-X verify"
  #         app_src_directory: "tests"
